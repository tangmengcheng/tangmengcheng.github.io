(window.webpackJsonp=window.webpackJsonp||[]).push([[68],{269:function(t,s,a){"use strict";a.r(s);var n=a(0),e=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"content"},[a("h2",{attrs:{id:"_1-css3-中新增了哪些新特性？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-css3-中新增了哪些新特性？","aria-hidden":"true"}},[t._v("#")]),t._v(" 1. CSS3 中新增了哪些新特性？")]),t._v(" "),a("p",[t._v("答：一些选择器、边框（"),a("code",[t._v("border-radius")]),t._v(", "),a("code",[t._v("border-image")]),t._v("）、"),a("code",[t._v("box-shadow")]),t._v("、背景（"),a("code",[t._v("background-origin``、``background-size")]),t._v(" 等）、文字（"),a("code",[t._v("word-wrap")]),t._v(", "),a("code",[t._v("text-overflow")]),t._v(", "),a("code",[t._v("text-shadow")]),t._v("）、颜色（"),a("code",[t._v("rgba")]),t._v(", "),a("code",[t._v("hsla")]),t._v("）、"),a("code",[t._v("transition")]),t._v(" 过渡、"),a("code",[t._v("transform")]),t._v(" 转换（"),a("code",[t._v("scale")]),t._v(" 缩放，"),a("code",[t._v("translate")]),t._v(" 平移，"),a("code",[t._v("rotate")]),t._v(" 旋转，"),a("code",[t._v("skew")]),t._v(" 切斜）、"),a("code",[t._v("animation")]),t._v(" 动画、渐变（"),a("code",[t._v("linear-gradient")]),t._v("线性渐变和 "),a("code",[t._v("radial-gradient")]),t._v(" 径向渐变）、"),a("code",[t._v("Flex")]),t._v(" 布局、"),a("code",[t._v("Grid")]),t._v(" 栅格布局、多列布局、媒体查询等等")]),t._v(" "),a("h2",{attrs:{id:"_2-css3-画一个三角形，其原理是什么？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-css3-画一个三角形，其原理是什么？","aria-hidden":"true"}},[t._v("#")]),t._v(" 2. CSS3 画一个三角形，其原理是什么？")]),t._v(" "),a("p",[t._v("我们有时候会需要用到一个三角形的形状，比如地址选择或者播放器里面播放按钮,通常情况下，我们会使用图片或者 svg 去完成三角形效果图")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("实心三角形")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".border:")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 0"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 0"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("border-style")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" solid"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("border-width")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 0 50px 50px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("border-color")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" transparent transparent red"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/img_convert/c9c4766fca653e3f13f0c6deed864588.png",alt:""}}),t._v("\n这时候就已经能够看到 4 个不同颜色的三角形，如果需要下方三角形，只需要将上、左、右边框设置为透明就可以得到下方的红色三角形. 但这种方式，虽然视觉上是实现了三角形，但实际上，隐藏的部分任然占据部分高度，需要将上方的宽度去掉")])]),t._v(" "),a("li",[a("p",[t._v("空心三角形(利用伪类)")]),t._v(" "),a("p",[t._v("伪类元素定位参照对象的内容区域宽高都为 0，则内容区域即可以理解成中心一点，所以伪元素相对中心这点定位")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".border")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 0"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 0"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("border-style")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" solid"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("border-width")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 0 50px 50px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("border-color")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" transparent transparent #d9534f"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("position")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" relative"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".border:after")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("content")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("border-style")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" solid"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("border-width")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 0 40px 40px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("border-color")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" transparent transparent #96ceb4"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("position")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" absolute"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("top")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 6px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("left")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" -40px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/img_convert/9bcc5345f0404068ea0e2370e8c77229.png",alt:""}})])]),t._v(" "),a("li",[a("p",[t._v("原理分析\n"),a("strong",[t._v("采用的是均分原理")]),t._v("：非常有意思的是盒子都是一个矩形或正方形，从形状的中心，向 4 个角上下左右划分 4 个部分\n"),a("img",{attrs:{src:"https://img-blog.csdn.net/20170428125622251?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvc2ppbnNh/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast",alt:""}})]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".square")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 0"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 0"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("margin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 0 auto"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("border-width")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 6px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("border-color")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" red transparent transparent transparent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("border-style")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" solid dashed dashed dashed"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" // 为了兼容IE6，把没有的边框都设置为虚线\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[a("img",{attrs:{src:"https://img-blog.csdnimg.cn/img_convert/9c5eedf681b5cfee8262e3c88be6645e.png",alt:""}}),t._v("\n边框是实现三角形的部分，边框实际上并不是一个直线，如果我们将四条边设置不同的颜色，将边框逐渐放大，可以得到每条边框都是一个梯形.当分别取消边框的时候，发现下面几种情况：")]),t._v(" "),a("ol",[a("li",[t._v("取消一条边的时候，与这条边相邻的两条边的接触部分会变成直的")]),t._v(" "),a("li",[t._v("当仅有邻边时， 两个边会变成对分的三角")]),t._v(" "),a("li",[t._v("当保留边没有其他接触时，极限情况所有东西都会消失\n"),a("img",{attrs:{src:"https://img-blog.csdnimg.cn/img_convert/49235a2eff29b6057568653e96abbe6e.png",alt:""}})])])]),t._v(" "),a("li",[a("p",[t._v("通过上图的变化规则，利用旋转、隐藏，以及设置内容宽高等属性，就能够实现其他类型的三角形")])])]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 如设置直角三角形  */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".box")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 内部大小 */")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 0px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 0px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 边框大小 只设置两条边*/")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("border-top")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" #4285f4 solid"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("border-right")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" transparent solid"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("border-width")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 85px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 其他设置 */")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("margin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 50px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"_3-获取元素的宽高的方式有哪些？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-获取元素的宽高的方式有哪些？","aria-hidden":"true"}},[t._v("#")]),t._v(" 3. 获取元素的宽高的方式有哪些？")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("dom.style.width/height")]),t._v(" "),a("p",[a("strong",[t._v("原理")]),t._v("：这种方式只能取到 dom 元素内联样式所设置的宽高；（也就是说如果该节点的样式是在 style 标签中或外联的 CSS 文件中设置的话，通过这种方法是获取不到 dom 的宽高的）")])]),t._v(" "),a("li",[a("p",[t._v("dom.currentStyle.width/height")]),t._v(" "),a("p",[a("strong",[t._v("原理")]),t._v("：获取渲染后的宽高。（但仅 IE 支持）")])]),t._v(" "),a("li",[a("p",[t._v("dom.getComputedStyle(dom).width/height")]),t._v(" "),a("p",[a("strong",[t._v("原理")]),t._v("：与 2 原理类似。但是兼容性，通用性更好一些")])]),t._v(" "),a("li",[a("p",[t._v("dom.getBoundingClientRect().width/height")]),t._v(" "),a("p",[a("strong",[t._v("原理")]),t._v("：计算元素的绝对位置，获取到四个属性，left, top, right, bottom")])])]),t._v(" "),a("h2",{attrs:{id:"_4-说说你对-盒子模型-的理解？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-说说你对-盒子模型-的理解？","aria-hidden":"true"}},[t._v("#")]),t._v(" 4. 说说你对 盒子模型 的理解？")]),t._v(" "),a("p",[t._v("CSS3 中的盒模型有以下两种：标准盒模型、IE（怪异替代）盒模型。")]),t._v(" "),a("p",[t._v("两种盒子模型都是由 content + padding + border + margin 构成，其大小都是由 content + padding + border 决定的，但是盒子内容宽/高度（即 width/height）的计算范围根据盒模型的不同会有所不同：")]),t._v(" "),a("ul",[a("li",[t._v("标准盒模型：只包含 content")]),t._v(" "),a("li",[t._v("IE（替代）盒模型：content + padding + border")])]),t._v(" "),a("p",[t._v("可以通过 box-sizing 来改变元素的盒模型：")]),t._v(" "),a("ul",[a("li",[t._v("box-sizing: content-box ：标准盒模型（默认值）")]),t._v(" "),a("li",[t._v("box-sizing: border-box ：IE（替代）盒模型")])]),t._v(" "),a("h2",{attrs:{id:"_5-css-中选择器有哪些？优先级？哪些属性可以继承？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-css-中选择器有哪些？优先级？哪些属性可以继承？","aria-hidden":"true"}},[t._v("#")]),t._v(" 5. CSS 中选择器有哪些？优先级？哪些属性可以继承？")]),t._v(" "),a("p",[t._v("样式的优先级一般为 "),a("code",[t._v("!important")]),t._v(" > "),a("code",[t._v("style")]),t._v(" > "),a("code",[t._v("id")]),t._v(" > "),a("code",[t._v("class")]),t._v(" > "),a("code",[t._v("标签选择器")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("优先级：")]),t._v(" "),a("ol",[a("li",[t._v("!important")]),t._v(" "),a("li",[t._v("内联样式（1000）")]),t._v(" "),a("li",[t._v("ID 选择器（0100）")]),t._v(" "),a("li",[t._v("类选择器/属性选择器/伪类选择器（0010）")]),t._v(" "),a("li",[t._v("元素选择器/伪元素选择器（0001）")]),t._v(" "),a("li",[t._v("关系选择器/通配符选择器（0000）")])]),t._v(" "),a("p",[a("strong",[t._v("总结")]),t._v("：带!important 标记的样式属性优先级最高； 样式表的来源相同时：!important > 行内样式>ID 选择器 > 类选择器 > 标签 > 通配符 > 继承 > 浏览器默认属性")])]),t._v(" "),a("li",[a("p",[t._v("css 属性选择器常用的有：")]),t._v(" "),a("ol",[a("li",[t._v("id 选择器（#box），选择 id 为 box 的元素")]),t._v(" "),a("li",[t._v("类选择器（.one），选择类名为 one 的所有元素")]),t._v(" "),a("li",[t._v("标签选择器（div），选择标签为 div 的所有元素")]),t._v(" "),a("li",[t._v("后代选择器（#box div），选择 id 为 box 元素内部所有的 div 元素")]),t._v(" "),a("li",[t._v("子选择器（.one>one_1），选择父元素为.one 的所有.one_1 的元素")]),t._v(" "),a("li",[t._v("相邻同胞选择器（.one+.two），选择紧接在.one 之后的所有.two 元素")]),t._v(" "),a("li",[t._v("群组选择器（div,p），选择 div、p 的所有元素")]),t._v(" "),a("li",[t._v("通配符选择器(*)")])])]),t._v(" "),a("li",[a("p",[t._v("一些使用频率相对不是很多的选择器：")]),t._v(" "),a("ol",[a("li",[t._v("伪类选择器（:link, :visited, :active, :hover）")]),t._v(" "),a("li",[t._v("伪元素选择器（:after, :before）")]),t._v(" "),a("li",[t._v("属性选择器（[attribute], [attribute=value]）")])])]),t._v(" "),a("li",[a("p",[t._v("CSS3 中新增的选择器：")]),t._v(" "),a("ol",[a("li",[t._v("伪类选择器（:nth-child(n), :not, :last-child）")]),t._v(" "),a("li",[t._v("属性选择器（[attribute^=value]）")])])]),t._v(" "),a("li",[a("p",[t._v("优先级是由 A 、B、C、D 的值来决定的，其中它们的值计算规则如下：")]),t._v(" "),a("ol",[a("li",[t._v("如果存在内联样式，那么 A = 1，否则 A = 0")]),t._v(" "),a("li",[t._v("B 的值等于 ID 选择器（#id） 出现的次数")]),t._v(" "),a("li",[t._v('C 的值等于 类选择器（.class） 和 属性选择器（a[href="https://example.org"]） 和 伪类（:first-child） 出现的总次数')]),t._v(" "),a("li",[t._v("D 的值等于 标签选择器（h1,a,div） 和 伪元素（::before,::after） 出现的总次数")])])])]),t._v(" "),a("p",[t._v("知道了优先级是如何计算之后，就来看看比较规则：")]),t._v(" "),a("ol",[a("li",[t._v("从左往右依次进行比较 ，较大者优先级更高")]),t._v(" "),a("li",[t._v("如果相等，则继续往右移动一位进行比较")]),t._v(" "),a("li",[t._v("如果 4 位全部相等，则后面的会覆盖前面的")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("CSS 属性继承\n在 css 中，继承是指的是给父元素设置一些属性，后代元素会自动拥有这些属性")]),t._v(" "),a("ul",[a("li",[t._v("关于继承属性，可以分成：")])]),t._v(" "),a("ol",[a("li",[a("p",[t._v("字体系列属性")])]),t._v(" "),a("li",[a("p",[t._v("文本系列属性")])]),t._v(" "),a("li",[a("p",[t._v("元素可见性")])]),t._v(" "),a("li",[a("p",[t._v("表格布局属性")]),t._v(" "),a("p",[a("strong",[t._v("注意")]),t._v("：继承中比较特殊的几点：")]),t._v(" "),a("ol",[a("li",[t._v("a 标签的字体颜色不能被继承")]),t._v(" "),a("li",[t._v("h1-h6 标签字体的大小也是不能被继承的")])])])]),t._v(" "),a("ul",[a("li",[t._v("无继承的属性：\n"),a("ol",[a("li",[t._v("display")]),t._v(" "),a("li",[t._v("文本属性：vertical-align、text-decoration")]),t._v(" "),a("li",[t._v("盒子模型的属性：宽度、高度、内外边距、边框等")]),t._v(" "),a("li",[t._v("背景属性：背景图片、颜色、位置等")]),t._v(" "),a("li",[t._v("定位属性：浮动、清除浮动、定位 position 等")]),t._v(" "),a("li",[t._v("生成内容属性：content、counter-reset、counter-increment")]),t._v(" "),a("li",[t._v("页面样式属性：size、page-break-before、page-break-after")])])])])])]),t._v(" "),a("p",[a("strong",[t._v("扩展")]),t._v("：CSS 伪类用于向某些选择器添加特殊的效果。CSS 伪元素用于向某些选择器设置特殊效果。")]),t._v(" "),a("h2",{attrs:{id:"_6-display-和-position-有哪些值？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-display-和-position-有哪些值？","aria-hidden":"true"}},[t._v("#")]),t._v(" 6. display 和 position 有哪些值？")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("display")]),t._v(" 的值：none、inline、inline-block、block、table、flex")]),t._v(" "),a("li",[a("code",[t._v("position")]),t._v(" 的值：static、relative、absolute、fixed、inherit、sticky\n"),a("ol",[a("li",[t._v("static(没有定位)是 position 的默认值，元素处于正常的文档流中，会忽略 left、top、right、bottom 和 z-index 属性。")]),t._v(" "),a("li",[t._v("relative(相对定位)是指给元素设置相对于原本位置的定位，元素并不脱离文档流，因此元素原本的位置会被保留，其他的元素位置不会受到影响。")]),t._v(" "),a("li",[t._v("absolute(绝对定位)是指给元素设置绝对的定位，相对定位的对象可以分为两种情况：\n"),a("ol",[a("li",[t._v("设置了 absolute 的元素如果存在有祖先元素设置了 position 属性为 relative 或者 absolute，则这时元素的定位对象为此已设置 position 属性的祖先元素。")]),t._v(" "),a("li",[t._v("如果并没有设置了 position 属性的祖先元素，则此时相对于 body 进行定位。")])])]),t._v(" "),a("li",[t._v("fixed 可以简单说 fixed 是特殊版的 absolute，fixed 元素总是相对于 body 定位的。")]),t._v(" "),a("li",[t._v("inherit 继承父元素的 position 属性，但需要注意的是 IE8 以及往前的版本都不支持 inherit 属性。")])])])]),t._v(" "),a("p",[a("strong",[t._v("扩展补充")]),t._v("："),a("code",[t._v("display: none")]),t._v("、"),a("code",[t._v("visibility: hidden")]),t._v(" 和 "),a("code",[t._v("opacity: 0")]),t._v(" 之间的区别？")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("相同点")]),t._v("：都是隐藏")]),t._v(" "),a("li",[a("strong",[t._v("不同点")]),t._v("：\n"),a("ol",[a("li",[a("code",[t._v("是否占据空间")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("display: none")]),t._v(", 隐藏之后 "),a("code",[t._v("不占")]),t._v(" 据空间")]),t._v(" "),a("li",[a("code",[t._v("visibility: hidden")]),t._v("、"),a("code",[t._v("opacity: 0")]),t._v(" 隐藏后任然 "),a("code",[t._v("占据")]),t._v(" 空间")])])]),t._v(" "),a("li",[a("code",[t._v("子元素是否继承")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("display: none")]),t._v(", 不会被子元素继承，父元素都不存在了，子元素也不会显示")]),t._v(" "),a("li",[a("code",[t._v("visibility: hidden")]),t._v(", 会被子元素继承，通过设置子元素,"),a("code",[t._v("visibility: visible")]),t._v(" 来显示子元素")]),t._v(" "),a("li",[a("code",[t._v("opacity: 0")]),t._v(", 会被子元素继承，但是不能设置子元素 "),a("code",[t._v("opacity")]),t._v(" 来重新显示")])])]),t._v(" "),a("li",[a("code",[t._v("事件绑定")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("display: none")]),t._v(", 元素都不在了，所以无法触发它绑定的事件")]),t._v(" "),a("li",[a("code",[t._v("visibility: hidden")]),t._v(", 不会触发它上面绑定的事件")]),t._v(" "),a("li",[a("code",[t._v("opacity: 0")]),t._v(", 元素上面绑定的事件是可以触发的")])])]),t._v(" "),a("li",[a("code",[t._v("过渡动画")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("transition")]),t._v(": 对于 "),a("code",[t._v("display")]),t._v(" 是 "),a("code",[t._v("无效的")])]),t._v(" "),a("li",[a("code",[t._v("transition")]),t._v(": 对于 "),a("code",[t._v("visibility")]),t._v(" 是 "),a("code",[t._v("无效的")])]),t._v(" "),a("li",[a("code",[t._v("transition")]),t._v(": 对于 opacity 是 "),a("code",[t._v("有效的")])])])])])])]),t._v(" "),a("h2",{attrs:{id:"_7-清除浮动的方式有哪些？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-清除浮动的方式有哪些？","aria-hidden":"true"}},[t._v("#")]),t._v(" 7. 清除浮动的方式有哪些？")]),t._v(" "),a("ul",[a("li",[t._v("方式一、添加额外标签，使用 clear:both;清除浮动"),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("parent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 添加额外标签并且添加clear属性 --\x3e")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token style-attr language-css"}},[a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("style")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('="')]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token property"}},[t._v("clear")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("both")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 也可以加一个br标签 --\x3e")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])])]),t._v(" "),a("li",[t._v("方式二、利用伪元素:after 来清除浮动"),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("// 在css中添加:after伪元素\n.parent:after")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 设置添加子元素的内容是空 */")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("content")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 设置添加子元素为块级元素 */")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("display")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" block"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 设置添加的子元素的高度0 */")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 0"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 设置添加子元素看不见 */")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("visibility")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" hidden"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 设置clear：both */")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("clear")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" both"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),a("li",[t._v("方式三、使用 CSS 的 overflow 属性（BFC）")])]),t._v(" "),a("h2",{attrs:{id:"_8-说说重绘-重排？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-说说重绘-重排？","aria-hidden":"true"}},[t._v("#")]),t._v(" 8. 说说重绘 & 重排？")]),t._v(" "),a("p",[t._v("简单地总结下两者的概念：")]),t._v(" "),a("ul",[a("li",[t._v("重排：无论通过什么方式影响了元素的几何信息(元素在视口内的位置和尺寸大小)，浏览器需要重新计算元素在视口内的几何属性，这个过程叫做重排")]),t._v(" "),a("li",[t._v("重绘：通过构造渲染树和重排（回流）阶段，我们知道了哪些节点是可见的，以及可见节点的样式和具体的几何信息(元素在视口内的位置和尺寸大小)，接下来就可以将渲染树的每个节点都转换为屏幕上的实际像素，这个阶段就叫做重绘")])]),t._v(" "),a("p",[t._v("如何减少重排和重绘？")]),t._v(" "),a("ol",[a("li",[t._v("最小化重绘和重排，比如样式集中改变，使用添加新样式类名 .class 或 cssText")]),t._v(" "),a("li",[t._v("批量操作 DOM，比如读取某元素 offsetWidth 属性存到一个临时变量，再去使用，而不是频繁使用这个计算属性；又比如利用 document.createDocumentFragment() 来添加要被添加的节点，处理完之后再插入到实际 DOM 中")]),t._v(" "),a("li",[t._v("使用 "),a("strong",[t._v("absolute")]),t._v(" 或 "),a("strong",[t._v("fixed")]),t._v(" 使元素脱离文档流，这在制作复杂的动画时对性能的影响比较明显")]),t._v(" "),a("li",[t._v("开启 GPU 加速，利用 css 属性 transform 、will-change 等，比如改变元素位置，我们使用 translate 会比使用绝对定位改变其 left 、top 等来的高效，因为它不会触发重排或重绘，transform 使浏览器为元素创建⼀个 GPU 图层，这使得动画元素在一个独立的层中进行渲染。当元素的内容没有发生改变，就没有必要进行重绘")])]),t._v(" "),a("p",[a("strong",[t._v("扩展")]),t._v("："),a("code",[t._v("transform")]),t._v(" 会造成回流吗？\n渲染流水线是这样的顺序："),a("code",[t._v("重排 -> 重绘 -> 合成")]),t._v("；"),a("code",[t._v("transform: translate")]),t._v(" 是直接合成，跳过了前面的重排重绘。"),a("strong",[t._v("但是")]),t._v(" 限制高宽也会出现问题，譬如图片被拉伸了。")]),t._v(" "),a("p",[t._v("-> 给 "),a("code",[t._v("<img/>")]),t._v(" 标签写上宽高，可以在图片未加载之前提前占住位置，避免图片从未加载状态到渲染完成状态高宽变化引起的 "),a("strong",[t._v("重排")]),t._v(" 问题。"),a("code",[t._v("object-fit: cover")]),t._v("，它能够指定可替换元素的内容（也就是图片）该如何适应它的父容器的高宽。object-fit 还有一个配套属性 object-position，它可以控制图片在其内容框中的位置。（类似于 background-position），m 默认是 object-position: 50% 50%，如果你不希望图片居中展示，可以使用它去改变图片实际展示的 position 。")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("img")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 100px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 100px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("object-fit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" cover"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("object-position")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 50% 50%"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[a("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/16cadfa094c14755a9fc7773be672647~tplv-k3u1fbpfcp-zoom-in-crop-mark:1304:0:0:0.awebp",alt:""}})]),t._v(" "),a("h2",{attrs:{id:"_9-defer、async-的区别？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-defer、async-的区别？","aria-hidden":"true"}},[t._v("#")]),t._v(" 9. defer、async 的区别？")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("script")]),t._v(" ：会阻碍 "),a("code",[t._v("HTML")]),t._v(" 解析，只有下载好并执行完脚本才会继续解析 HTML。")]),t._v(" "),a("li",[a("code",[t._v("async script")]),t._v(" ：解析 "),a("code",[t._v("HTML")]),t._v(" 过程中进行脚本的异步下载，下载成功立马执行，有可能会阻断 HTML 的解析。")]),t._v(" "),a("li",[a("code",[t._v("defer script")]),t._v("：完全不会阻碍 "),a("code",[t._v("HTML")]),t._v(" 的解析，解析完成之后再按照顺序执行脚本。")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/8ea091aed8364b88a653a13c4845a824~tplv-k3u1fbpfcp-watermark.awebp",alt:""}})]),t._v(" "),a("h2",{attrs:{id:"_10-说说-html、css、js-的加载顺序？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_10-说说-html、css、js-的加载顺序？","aria-hidden":"true"}},[t._v("#")]),t._v(" 10. 说说 html、css、js 的加载顺序？")]),t._v(" "),a("p",[a("code",[t._v("html")]),t._v(" 解析 -> "),a("code",[t._v("htmlParser2")]),t._v(" "),a("code",[t._v("css")]),t._v(" 解析 -> "),a("code",[t._v("css")])]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("DOM 解析")]),t._v("：把所写的各种 "),a("code",[t._v("html")]),t._v(" 标签，生成一个 "),a("code",[t._v("DOM TREE")]),t._v("，相当于是生成了一个最原始的页面，一点样式都没有，毫无 "),a("code",[t._v("CSS")]),t._v(" 修饰。"),a("strong",[t._v("边解析边渲染")])]),t._v(" "),a("li",[a("strong",[t._v("DOM 渲染")]),t._v("：浏览器会把本身默认的样式 + 用户自己写得样式整合到一起，形成一个"),a("code",[t._v("CSS TREE")]),t._v("，而"),a("code",[t._v("DOM")]),t._v("渲染就是指"),a("code",[t._v("DOM TREE")]),t._v(" 和 "),a("code",[t._v("CSS TREE")]),t._v(" 结合到一起，生成一个"),a("code",[t._v("Render TREE")]),t._v("，呈现出一个带有样式的页面")]),t._v(" "),a("li",[a("code",[t._v("DOM")]),t._v(" 与 "),a("code",[t._v("CSS")])])]),t._v(" "),a("ol",[a("li",[a("code",[t._v("css")]),t._v(" 的加载不会阻塞 "),a("code",[t._v("DOM")]),t._v(" 的"),a("strong",[t._v("解析")])]),t._v(" "),a("li",[a("code",[t._v("css")]),t._v(" 的加载会阻塞 "),a("code",[t._v("DOM")]),t._v(" 的"),a("strong",[t._v("渲染")])])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("DOM")]),t._v(" 与 "),a("code",[t._v("JS")])])]),t._v(" "),a("ol",[a("li",[a("code",[t._v("JS")]),t._v("（加载和执行） 都会阻塞 "),a("code",[t._v("DOM")]),t._v(" 的"),a("strong",[t._v("解析")])]),t._v(" "),a("li",[a("code",[t._v("JS")]),t._v("（加载和执行） 都会阻塞 "),a("code",[t._v("DOM")]),t._v(" 的"),a("strong",[t._v("渲染")])])]),t._v(" "),a("p",[a("strong",[t._v("注")]),t._v("："),a("code",[t._v("html")]),t._v(" 中每遇到 "),a("code",[t._v("script")]),t._v(" 标签，页面就会重新渲染一次，因为要保证标签中的 "),a("code",[t._v("JS")]),t._v(" 代码拿到的都是最新的样式")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("CSS")]),t._v(" 与 "),a("code",[t._v("JS")])])]),t._v(" "),a("ol",[a("li",[a("code",[t._v("CSS")]),t._v(" 的加载阻塞 "),a("code",[t._v("JS")]),t._v(" 的"),a("strong",[t._v("运行")]),t._v("，不阻塞 "),a("code",[t._v("JS")]),t._v(" 的"),a("strong",[t._v("加载")]),t._v("。 "),a("code",[t._v("CSS")]),t._v(" 和 "),a("code",[t._v("JS")]),t._v(" 同时加载")])]),t._v(" "),a("p",[a("strong",[t._v("注")]),t._v("："),a("code",[t._v("CSS")]),t._v(" 的渲染 "),a("code",[t._v("GUI 线程")]),t._v("和 "),a("code",[t._v("JS 运行线程")]),t._v("互斥")]),t._v(" "),a("p",[a("strong",[t._v("总结")]),t._v("：")]),t._v(" "),a("ol",[a("li",[a("p",[a("code",[t._v("script")]),t._v(" 最好放底部，"),a("code",[t._v("link")]),t._v(" 最好放头部。"),a("strong",[t._v("注意")]),t._v("："),a("code",[t._v("link")]),t._v(" 放到底部，可能会发生 "),a("code",[t._v("重绘")]),t._v("，因为渲染 "),a("code",[t._v("DOM")]),t._v("，要等待样式加载完毕")])]),t._v(" "),a("li",[a("p",[t._v("如果头部同时有"),a("code",[t._v("script")]),t._v("与"),a("code",[t._v("link")]),t._v("的情况下，最好将"),a("code",[t._v("script")]),t._v("放在"),a("code",[t._v("link")]),t._v("上面")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("HTML")]),t._v(" 在加载的时候，会预先加载 "),a("code",[t._v("CSS")]),t._v(" 和 "),a("code",[t._v("JS")]),t._v("，且并行加载。"),a("code",[t._v("JS")]),t._v(" 阻塞 "),a("code",[t._v("DOM")]),t._v(" 解析 和 渲染。"),a("code",[t._v("JS")]),t._v(" 要等上面的的 "),a("code",[t._v("css")]),t._v(" 加载完毕，保证页面可以操作样式\n"),a("strong",[t._v("扩展")]),t._v("：为了避免让用户看到长时间的白屏时间，我们应该尽可能的提高 "),a("code",[t._v("css")]),t._v(" 加载速度，比如可以使用以下几种方法:")])]),t._v(" "),a("li",[a("p",[t._v("使用 "),a("code",[t._v("CDN")]),t._v("（因为 "),a("code",[t._v("CDN")]),t._v(" 会根据你的网络状况，替你挑选最近的一个具有缓存内容的节点为你提供资源，因此可以减少加载时间）")])]),t._v(" "),a("li",[a("p",[t._v("对 "),a("code",[t._v("css")]),t._v(" 进行压缩（可以用很多打包工具，比如 "),a("code",[t._v("webpack")]),t._v(", "),a("code",[t._v("gulp")]),t._v(" 等，也可以通过开启 gzip 压缩）")])]),t._v(" "),a("li",[a("p",[t._v("合理的使用缓存（设置 "),a("code",[t._v("cache-control")]),t._v(","),a("code",[t._v("expires")]),t._v(",以及 "),a("code",[t._v("E-tag")]),t._v(" 都是不错的，不过要注意一个问题，就是文件更新后，你要避免缓存而带来的影响。其中一个解决防范是在文件名字后面加一个版本号）")])]),t._v(" "),a("li",[a("p",[t._v("减少 "),a("code",[t._v("http")]),t._v(" 请求数，将多个 "),a("code",[t._v("css")]),t._v(" 文件合并，或者是干脆直接写成内联样式（内联样式的一个缺点就是不能缓存）")])]),t._v(" "),a("li",[a("p",[t._v("不要在嵌入的 "),a("code",[t._v("JS")]),t._v(" 中调用运行时间较长的函数，如果一定要用，可以用"),a("code",[t._v("setTimeout")]),t._v("来调用")])])]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("扩展")]),t._v("："),a("code",[t._v("DOM")]),t._v(" 如何生成的？\n"),a("ol",[a("li",[t._v("在解析前会执行 "),a("code",[t._v("预解析")]),t._v(" 操作，会预先加载 "),a("code",[t._v("JS")]),t._v("、"),a("code",[t._v("CSS")]),t._v(" 等文件")]),t._v(" "),a("li",[t._v("字节流 -> 分词器 -> 根据 token 生成节点 -> 插入到 "),a("code",[t._v("DOM 树")]),t._v("中")]),t._v(" "),a("li",[t._v("遇到 "),a("code",[t._v("JS")]),t._v("：在解析过程中遇到 "),a("code",[t._v("script")]),t._v(" 标签，"),a("code",[t._v("HTMLParser")]),t._v(" 会停止解析，（下载）执行对应的脚本")]),t._v(" "),a("li",[t._v("在 "),a("code",[t._v("JS")]),t._v(" 执行前，需要等待当前脚本之上的所有 "),a("code",[t._v("CSS")]),t._v(" 加载解析完毕（"),a("code",[t._v("JS")]),t._v(" 是依赖 "),a("code",[t._v("CSS")]),t._v(" 的加载）")])])])]),t._v(" "),a("h2",{attrs:{id:"_11-你知道哪几种方式可以隐藏一个元素？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_11-你知道哪几种方式可以隐藏一个元素？","aria-hidden":"true"}},[t._v("#")]),t._v(" 11. 你知道哪几种方式可以隐藏一个元素？")]),t._v(" "),a("p",[t._v("答："),a("code",[t._v("opacity/filter: opacity()")]),t._v("、"),a("code",[t._v("clip-path")]),t._v("、"),a("code",[t._v("position")]),t._v("、"),a("code",[t._v("z-index")]),t._v("、"),a("code",[t._v("visibility")]),t._v("、"),a("code",[t._v("覆盖一个元素(伪类:after)")]),t._v("、"),a("code",[t._v("display")]),t._v("、"),a("code",[t._v("transform: scale(0)/translate(-999px, 0px)")]),t._v("、"),a("code",[t._v("color alpha")]),t._v("、"),a("code",[t._v("缩小尺寸")]),t._v("等")]),t._v(" "),a("h2",{attrs:{id:"_12-了解-h5-的-draggable-拖拽吗？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_12-了解-h5-的-draggable-拖拽吗？","aria-hidden":"true"}},[t._v("#")]),t._v(" 12. 了解 H5 的 draggable 拖拽吗？")]),t._v(" "),a("p",[t._v("为了使元素可拖动，把 "),a("code",[t._v("draggable")]),t._v(" 属性设置为 "),a("code",[t._v("true")]),t._v("。"),a("code",[t._v("draggable")]),t._v(" 属性可用于任何元素节点，但是图片（"),a("code",[t._v("img")]),t._v("）和链接（"),a("code",[t._v("a")]),t._v("）不加这个属性，就可以拖拉")]),t._v(" "),a("p",[a("strong",[t._v("注意")]),t._v("：一旦某个元素节点的 "),a("code",[t._v("draggable")]),t._v(" 属性设为 "),a("code",[t._v("true")]),t._v("，就无法再用鼠标选中该节点内部的文字或子节点了")]),t._v(" "),a("ul",[a("li",[t._v("当元素节点或选中的文本被拖拉时，包括以下一些事件：\n"),a("ol",[a("li",[a("code",[t._v("drag")]),t._v("：拖拉过程中")]),t._v(" "),a("li",[a("code",[t._v("dragstart")]),t._v("：用户开始拖拉时")]),t._v(" "),a("li",[a("code",[t._v("dragend")]),t._v("：拖拉结束时")]),t._v(" "),a("li",[a("code",[t._v("dragenter")]),t._v("：拖拉进入当前节点时")]),t._v(" "),a("li",[a("code",[t._v("dragover")]),t._v("：拖拉到当前节点上方时")]),t._v(" "),a("li",[a("code",[t._v("dragleave")]),t._v("：拖拉操作离开当前节点范围时")]),t._v(" "),a("li",[a("code",[t._v("drop")]),t._v("：被拖拉的节点或选中的文本，释放到目标节点时")])])])]),t._v(" "),a("h2",{attrs:{id:"_13-优化长列表滚动效果？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_13-优化长列表滚动效果？","aria-hidden":"true"}},[t._v("#")]),t._v(" 13. 优化长列表滚动效果？")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("transition 优化动画效果，分层渲染")]),t._v(" "),a("ol",[a("li",[t._v("第一种、用 transform 进行强制分层")]),t._v(" "),a("li",[t._v("第二种、可以用 content-visibility 将看不见的元素不渲染，设置值为 auto 即可")]),t._v(" "),a("li",[t._v("第三种、是对于某些动画效果，可以用 will-change 作用在父元素上进行 gpu 加速，使用后删掉")]),t._v(" "),a("li",[t._v("第四种、懒加载：即监听 scroll 事件或使用 IntersectionObserver 监听")]),t._v(" "),a("li",[t._v("第五种、可视区域渲染: 仅在可视区域展示数据，为保证滚动条的完整性，非可视区域使用占位元素的高度后者容器的位移来撑开。")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("扩展")]),t._v("：css 怎么开启硬件加速(GPU 加速)")])])]),t._v(" "),a("ol",[a("li",[t._v("transform（当 3D 变换的样式出现时会使用 GPU 加速）")]),t._v(" "),a("li",[t._v("opacity")]),t._v(" "),a("li",[t._v("filter")]),t._v(" "),a("li",[t._v("will-change")])]),t._v(" "),a("p",[t._v("浏览器在处理上面的 css 的时候，会使用 GPU 渲染")]),t._v(" "),a("h2",{attrs:{id:"_14-移动端-1px-像素如何解决？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_14-移动端-1px-像素如何解决？","aria-hidden":"true"}},[t._v("#")]),t._v(" 14. 移动端 1px 像素如何解决？")]),t._v(" "),a("p",[t._v("在 CSS 规范中，长度单位可以分为两类，绝对(absolute)单位以及相对(relative)单位。px 是一个相对单位，相对的是设备像素(device pixel)。")]),t._v(" "),a("ul",[a("li",[t._v("PX(CSS pixels)虚拟像素，可以理解为“直觉”像素，CSS 和 JS 使用的抽象单位，浏览器内的一切长度都是以 CSS 像素为单位的，CSS 像素的单位是 px。")]),t._v(" "),a("li",[t._v("DP(device pixels)设备像素（物理像素），顾名思义，显示屏是由一个个物理像素点组成的，通过控制每个像素点的颜色，使屏幕显示出不同的图像，屏幕从工厂出来那天起，它上面的物理像素点就固定不变了，单位 pt。\npt 在 css 单位中属于真正的绝对单位，1pt = 1/72(inch),inch 及英寸，而 1 英寸等于 2.54 厘米。")]),t._v(" "),a("li",[t._v("DPR(device pixels ratio)DPR = 设备像素/CSS 像素")]),t._v(" "),a("li",[t._v("DIP(Device independent Pixel)设备独立像素/逻辑像素.可以理解为： 设备独立像素 = css 像素")])]),t._v(" "),a("p",[a("strong",[t._v("根本原因")]),t._v("：因为不同设备可能有不同的 dpr，导致了 1px 展示的宽度有所不同。")]),t._v(" "),a("h3",{attrs:{id:"问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#问题","aria-hidden":"true"}},[t._v("#")]),t._v(" 问题")]),t._v(" "),a("ul",[a("li",[t._v("问：1px 的设置是没有问题的，那么是什么导致了不同设备的表现不一致呢？\n答： 不同的 dpr 导致了不同设备的 1px 包含了不同数量的 pt")]),t._v(" "),a("li",[t._v("问：我和设计小伙伴嘴里说的 1px 是一个东西吗？\n答：并不是，设计小伙伴真正想要的是 1pt 的效果")])]),t._v(" "),a("h3",{attrs:{id:"解决方案"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#解决方案","aria-hidden":"true"}},[t._v("#")]),t._v(" 解决方案")]),t._v(" "),a("p",[a("strong",[t._v("注意")]),t._v("：我在两倍屏把宽度定义成 0.5px 不就行了吗？0.5px 也只在 ios8+上支持(小于 ios8 被转为 0px)，安卓上是不行的。")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("方式一、background-image && border-image")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".background-image-1px")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("background")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token url"}},[t._v("url(...)")]),t._v(" no-repeat left bottom"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("-webkit-background-size")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 100% 1px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("background-size")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 100% 1px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".border-bottom-1px")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("border-width")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 0 0 1px 0"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("-webkit-border-image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token url"}},[t._v("url(...)")]),t._v(" 0 0 2 0 stretch"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("border-image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token url"}},[t._v("url(...)")]),t._v(" 0 0 2 0 stretch"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[a("strong",[t._v("优势")]),t._v("： 至少解决了问题")]),t._v(" "),a("p",[a("strong",[t._v("劣势")]),t._v("： 我想换个颜色还得换图,而且图片处理圆角会出现模糊的问题")])]),t._v(" "),a("li",[a("p",[t._v("方式二、border-shadow")]),t._v(" "),a("p",[t._v("通过 css 对 border-shadow 的处理来模拟 0.5px")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".box-shadow-1px")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("box-shadow")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" inset 0px -1px 1px -1px #c8c7cc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[a("strong",[t._v("优势")]),t._v("： 代码少，还能换颜色")]),t._v(" "),a("p",[a("strong",[t._v("劣势")]),t._v("： 阴影导致的颜色变浅，而且仔细看谁都看得出这是阴影而不是边框")])]),t._v(" "),a("li",[a("p",[t._v("方式三、伪元素 + scale 缩放")]),t._v(" "),a("p",[t._v("构建 1 个伪元素, border 为 1px, 再以 transform 缩放到 50%。ant-design-mobile 同样使用这种处理")]),t._v(" "),a("p",[a("strong",[t._v("原理")]),t._v(": 是把原先元素的 border 去掉，然后利用 :before 或者 :after 重做 border ，并将 transform 的 scale 缩小一半，原先的元素相对定位，新做的 border 绝对定位。")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".scale-1px")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("position")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" relative"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("border")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" none"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".scale-1px:after")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("content")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("position")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" absolute"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("bottom")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 0"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("background")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" #000"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 100%"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("-webkit-transform")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("scaleY")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("0.5"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("transform")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("scaleY")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("0.5"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("-webkit-transform-origin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 0 0"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("transform-origin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 0 0"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("四条 border 样式设置:")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".scale-1px")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("position")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" relative"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("margin-bottom")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 20px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("border")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" none"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".scale-1px:after")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("content")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("position")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" absolute"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("top")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 0"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("left")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 0"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("border")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1px solid #000"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("-webkit-box-sizing")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" border-box"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("box-sizing")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" border-box"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 200%"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 200%"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("-webkit-transform")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("scale")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("0.5"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("transform")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("scale")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("0.5"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("-webkit-transform-origin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" left top"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("transform-origin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" left top"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("最好在使用前也判断一下，结合 JS 代码，判断是否 Retina 屏：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("devicePixelRatio "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" devicePixelRatio "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("querySelector")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ul'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("className "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'scale-1px'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[a("strong",[t._v("优点")]),t._v("：可以满足所有场景，且修改灵活。"),a("strong",[t._v("缺点")]),t._v("：对于已使用伪类的元素（例如 clearfix）要多层嵌套。")])]),t._v(" "),a("li",[a("p",[t._v("方式四、viewport + rem 实现")]),t._v(" "),a("p",[t._v("同时通过设置对应 viewport 的 rem 基准值，这种方式就可以像以前一样轻松愉快的写 1px 了。 在 devicePixelRatio = 2 时，输出 viewport：")]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("meta")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("viewport"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("content")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("initial-scale=0.5, maximum-scale=0.5, minimum-scale=0, user-scalable=no"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n")])])]),a("p",[t._v("在 devicePixelRatio = 3 时，输出 viewport：")]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("meta")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("viewport"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("content")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("initial-scale=0.3333333333333333, maximum-scale=0.3333333333333333, minimum-scale=0.3333333333333333, user-scalable=no"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n")])])]),a("p",[a("strong",[t._v("优点")]),t._v("：所有场景都能满足。一套代码，可以兼容基本所有布局\n"),a("strong",[t._v("缺点")]),t._v("：老项目修改代价过大，只适用于新项目")])])]),t._v(" "),a("h2",{attrs:{id:"_15-css-如何实现一个正方形盒子（随父元素）自适应"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_15-css-如何实现一个正方形盒子（随父元素）自适应","aria-hidden":"true"}},[t._v("#")]),t._v(" 15. css 如何实现一个正方形盒子（随父元素）自适应?")]),t._v(" "),a("ul",[a("li",[t._v("方式一、CSS3 vw 单位，vw 是相对于视口的宽度。视口被均分为 100 单位的 vw。1vw = 1% viewport width"),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".box")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 20%"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" // 20vw也可以\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 20vw"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("background")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" red"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),a("li",[t._v("方式二、设置盒子的 padding-bottom 样式，让盒子的 padding-bottom 和盒子的宽度一样，同时设置 heigh = 0px；"),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".box")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 20%"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 设置height为0，避免当盒子里面有内容的时候，盒子会被内容撑大 */")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 0px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 把盒子的高撑开，和width设置同样的固定的宽度或者百分比。百分比相对的是父元素盒子的宽度 */")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("padding-bottom")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 20%"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("background")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" red"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),t._v("盒子设置了 heigh:0px；导致该元素里面再有子元素的时候，就无法正常设置高度。所以我们需要用到 position: absolute;使当前内容脱离文档流,那么内容的高度百分比参照的就是父级的宽度")])]),t._v(" "),a("h2",{attrs:{id:"经典-flex-布局"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#经典-flex-布局","aria-hidden":"true"}},[t._v("#")]),t._v(" 经典 Flex 布局")]),t._v(" "),a("p",[t._v("如今"),a("code",[t._v("Flex")]),t._v("布局不管是移动端还是 PC 端的应用已经非常广泛了，下面我列举几个平时项目中非常常见的几个需求。以下例子我们都以 Vue 项目为例~")]),t._v(" "),a("blockquote",[a("p",[t._v("flex 布局均匀分布后换行问题")])]),t._v(" "),a("p",[t._v("需求一："),a("code",[t._v("ul")]),t._v("下有多个"),a("code",[t._v("li")]),t._v("，每三个"),a("code",[t._v("li")]),t._v("排一列，多余的换行显示。")]),t._v(" "),a("p",[t._v("很显然，绝大部分的小伙伴都会使用"),a("code",[t._v("Flex布局")]),t._v("，很显然会出现一个问题就是如果 li 是 3 的倍数的话就能正常显示，若不是的话，布局就不是产品经理满意的结果。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("display: flex;\njustify-content: space-between;\nalign-items: center;\nflex-wrap: wrap;\n")])])]),a("p",[a("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2020/3/30/17129d241aa41ddd?w=1088&h=922&f=jpeg&s=45051",alt:""}})]),t._v(" "),a("p",[a("strong",[t._v("解决方案")]),t._v("：")]),t._v(" "),a("p",[t._v("我们在"),a("code",[t._v("ul")]),t._v("的底部新增"),a("code",[t._v("li")]),t._v("，个数为数组"),a("strong",[t._v("总长度%3")]),t._v("的余数即可。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('<li class="item" style="border: none;" v-for="(ite, idx) in list.length%3" :key="idx"></li>\n')])])]),a("p",[a("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2020/3/30/17129d241d97854d?w=1080&h=896&f=jpeg&s=43302",alt:""}})]),t._v(" "),a("blockquote",[a("p",[t._v("扩展："),a("code",[t._v("flex:1")]),t._v(" 是哪些属性组成的")])]),t._v(" "),a("p",[a("code",[t._v("flex")]),t._v(" 实际上是 "),a("code",[t._v("flex-grow")]),t._v("、"),a("code",[t._v("flex-shrink")]),t._v(" 和 "),a("code",[t._v("flex-basis")]),t._v(" 三个属性的缩写")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("flex-grow")]),t._v("：定义项目的的放大比例")]),t._v(" "),a("p",[t._v("默认为 0，即 即使存在剩余空间，也不会放大；所有项目的 flex-grow 为 1：等分剩余空间（自动放大占位）；flex-grow 为 n 的项目，占据的空间（放大的比例）是 flex-grow 为 1 的 n 倍。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("flex-shrink")]),t._v("：定义项目的缩小比例")]),t._v(" "),a("p",[t._v("默认为 1，即 如果空间不足，该项目将缩小；所有项目的 flex-shrink 为 1：当空间不足时，缩小的比例相同；flex-shrink 为 0：空间不足时，该项目不会缩小；flex-shrink 为 n 的项目，空间不足时缩小的比例是 flex-shrink 为 1 的 n 倍。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("flex-basis")]),t._v("： 定义在分配多余空间之前，项目占据的主轴空间（"),a("code",[t._v("main size")]),t._v("），浏览器根据此属性计算主轴是否有多余空间")]),t._v(" "),a("p",[t._v("默认值为 auto，即 项目原本大小；设置后项目将占据固定空间。")])])]),t._v(" "),a("h2",{attrs:{id:"两栏布局"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#两栏布局","aria-hidden":"true"}},[t._v("#")]),t._v(" 两栏布局")]),t._v(" "),a("blockquote",[a("p",[t._v("两栏布局："),a("code",[t._v("左右两栏，左边固定，右边自适应")])])]),t._v(" "),a("p",[t._v("效果图")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2020/3/22/171016bfb87c3f2b?w=2814&h=852&f=png&s=94737",alt:""}})]),t._v(" "),a("ol",[a("li",[a("p",[t._v("第一种方式 --- "),a("code",[t._v("浮动")])]),t._v(" "),a("p",[t._v("HTML 部分：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('<div class="outer outer1">\n    <div class="left">1-left</div>\n    <div class="right">1-right</div>\n</div>\n')])])]),a("p",[t._v("CSS 部分：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(".outer1 .left {\n    width: 200px;\n    float: left;\n}\n.outer1 .right {\n    width: auto;\n    margin-left: 200px;\n}\n")])])])]),t._v(" "),a("li",[a("p",[t._v("第二种方式 --- "),a("code",[t._v("flex")])]),t._v(" "),a("p",[t._v("HTML 部分：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('<div class="outer outer2">\n    <div class="left">2-left</div>\n    <div class="right">2-right</div>\n</div>\n')])])]),a("p",[t._v("CSS 部分：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(".outer2 {\n   display: flex;\n}\n.outer2 .left {\n   flex: 0 0 200px;\n   /* flex-grow: 0;\n   flex-shrink:0;\n   flex-basis:200px; */\n}\n.outer2 .right {\n   flex: auto;\n}\n\n注意：flex: 0 0 200px是flex: flex-grow flex-shrink flex-basis的简写\n")])])])]),t._v(" "),a("li",[a("p",[t._v("第三种方式 --- "),a("code",[t._v("position")])]),t._v(" "),a("p",[t._v("HTML 部分：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('<div class="outer outer3">\n   <div class="left">3-left</div>\n   <div class="right">3-right</div>\n</div>\n')])])]),a("p",[t._v("CSS 部分：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(".outer3 {\n   position: relative;\n}\n.outer3 .left {\n   position: absolute;\n   width: 200px;\n}\n.outer3 .right {\n   margin-left: 200px;\n}\n")])])])]),t._v(" "),a("li",[a("p",[t._v("第四种方式 --- "),a("code",[t._v("position again")])]),t._v(" "),a("p",[t._v("HTML 部分：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('<div class="outer outer4">\n    <div class="left">4-left</div>\n    <div class="right">4-right</div>\n</div>\n')])])]),a("p",[t._v("CSS 部分：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(".outer4 {\n    position: relative;\n}\n.outer4 .left {\n    width: 200px;\n}\n.outer4 .right {\n    position: absolute;\n    top: 0;\n    left: 200px;\n    right: 0;\n}\n")])])])])]),t._v(" "),a("h2",{attrs:{id:"三栏布局"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三栏布局","aria-hidden":"true"}},[t._v("#")]),t._v(" 三栏布局")]),t._v(" "),a("blockquote",[a("p",[t._v("三栏布局： "),a("code",[t._v("中间列自适应宽度，旁边两侧固定宽度")])])]),t._v(" "),a("p",[t._v("效果图")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2020/3/22/171016bfbd8ec528?w=2816&h=622&f=png&s=114551",alt:""}})]),t._v(" "),a("ol",[a("li",[a("p",[t._v("第一种方式 --- "),a("code",[t._v("定位")])]),t._v(" "),a("p",[t._v("HTML 部分：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('<div class="outer outer1">\n   <div class="left">1-left</div>\n   <div class="middle">1-middle</div>\n   <div class="right">1-right</div>\n</div>\n')])])]),a("p",[t._v("CSS 部分：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(".outer1 {\n   position: relative;\n}\n.outer1 .left {\n   position: absolute;\n   width: 100px;\n}\n.outer1 .middle {\n   margin: 0 200px 0 100px;\n}\n.outer1 .right {\n   position: absolute;\n   width: 200px;\n   top: 0;\n   right: 0;\n}\n注意：左右分别使用绝对定位，中间设置外边距\n")])])])]),t._v(" "),a("li",[a("p",[t._v("第二种方式 --- "),a("code",[t._v("flex布局")])]),t._v(" "),a("p",[t._v("HTML 部分：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('<div class="outer outer2">\n   <div class="left">2-left</div>\n   <div class="middle">2-middle</div>\n   <div class="right">2-right</div>\n</div>\n')])])]),a("p",[t._v("CSS 部分：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(".outer2 {\n   display: flex;\n}\n.outer2 .left {\n   flex: 0 0 100px;\n}\n.outer2 .middle {\n   flex: auto;\n}\n.outer2 .right {\n   flex: 0 0 200px;\n}\n")])])])]),t._v(" "),a("li",[a("p",[t._v("第三种方式 --- "),a("code",[t._v("浮动原理")])]),t._v(" "),a("p",[t._v("HTML 部分：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('<div class="outer outer3">\n   <div class="left">3-left</div>\n   <div class="right">3-right</div>\n   <div class="middle">3-middle</div>\n</div>\n')])])]),a("p",[t._v("CSS 部分：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(".outer3 .left{\n   float: left;\n   width: 100px;\n}\n.outer3 .right {\n   float: right;\n   width: 200px;\n}\n.outer3 .middle {\n   margin: 0 200px 0 100px;\n}\n")])])])])]),t._v(" "),a("h2",{attrs:{id:"圣杯布局"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#圣杯布局","aria-hidden":"true"}},[t._v("#")]),t._v(" 圣杯布局")]),t._v(" "),a("blockquote",[a("p",[t._v("圣杯布局: "),a("code",[t._v("中间的优先渲染，独立的左中右结构")])])]),t._v(" "),a("p",[t._v("具体实现圣杯布局的步骤：")]),t._v(" "),a("ol",[a("li",[t._v("让左右浮动在一行显示，相对定位")]),t._v(" "),a("li",[t._v("让中间模块的 middle 宽度为 100%")]),t._v(" "),a("li",[t._v("让左边的色块移动到 middle 前面，margin-left:-100%")]),t._v(" "),a("li",[t._v("让右边的色块移动到 middle 的后面，margin-left:-宽度")]),t._v(" "),a("li",[t._v("给三个小块的父元素加一个内填充的属性 padding,为的是填充挤到中间")]),t._v(" "),a("li",[t._v("给左边的块移动到左边 left:-200px, 给右边的块移动到右边 right:-200px")])]),t._v(" "),a("p",[t._v("效果图")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2020/3/22/171016bfea7d0bbe?w=2816&h=798&f=png&s=55592",alt:""}})]),t._v(" "),a("p",[t._v("HTML 部分：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('<header>header</header>\n   <div class="container">\n      <div class="middle">midlle</div>\n      <div class="left">left</div>\n      <div class="right">right</div>\n   </div>\n<footer>footer</footer>\n')])])]),a("p",[t._v("CSS 部分：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("header, footer {\n   height: 100px;\n   width: 100%;\n   background-color: antiquewhite;\n}\n.container {\n   height: 200px;\n   padding-left: 200px;\n   padding-right: 300px;\n}\n.container > div {\n   float: left;\n   position: relative;\n   height: 100%;\n}\n.left {\n   width: 200px;\n   height: 200px;\n   background-color: burlywood;\n   margin-left: -100%;\n   left: -200px;\n}\n.right {\n   width: 300px;\n   height: 200px;\n   background-color: burlywood;\n   margin-left: -300px;\n   right: -300px;\n}\n.middle {\n   width: 100%;\n   height: 200px;\n   background-color: #b0f9c2;\n}\n")])])]),a("h2",{attrs:{id:"双飞翼布局"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#双飞翼布局","aria-hidden":"true"}},[t._v("#")]),t._v(" 双飞翼布局")]),t._v(" "),a("blockquote",[a("p",[t._v("双飞翼布局")])]),t._v(" "),a("p",[t._v("具体实现双飞翼布局的步骤：")]),t._v(" "),a("ol",[a("li",[t._v("给左，中，右 加浮动，在一行显示")]),t._v(" "),a("li",[t._v("给 middle 宽度为 100%")]),t._v(" "),a("li",[t._v("让左边的模块移动 middle 的左边 margin-left:-100%")]),t._v(" "),a("li",[t._v("让右边的模块移动 middle 的右边 margin-left:-自己宽度")]),t._v(" "),a("li",[t._v("给 middle 里面的容器添加外间距 margin: 左右")])]),t._v(" "),a("p",[t._v("效果：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2020/3/22/171016bfeaa7fbb3?w=2830&h=466&f=jpeg&s=13556",alt:""}})]),t._v(" "),a("p",[t._v("html 部分")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('<div class="main">\n    <div class="middle">\n\t\t\t<div class="middle-inner">中间</div>\n    </div>\n    <div class="left">左边</div>\n    <div class="right">右边</div>\n</div>\n')])])]),a("p",[t._v("css 部分")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(".main>div {\n    float:left;\n    position: relative;\n    height: 300px;\n}\n.middle {\n    width: 100%;\n    background-color: lightgreen\n}\n.left {\n   width:200px;\n   margin-left:-100%;\n   background-color:#b0f9c2\n}\n.right {\n   width: 200px;\n   margin-left:-200px;\n   background-color:pink\n}\n.middle-inner{\n   margin:0 200px;\n   background-color: burlywood;\n   height:300px;\n}\n")])])]),a("h2",{attrs:{id:"水平垂直居中"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#水平垂直居中","aria-hidden":"true"}},[t._v("#")]),t._v(" 水平垂直居中")]),t._v(" "),a("p",[t._v("html 部分")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('<div class="box" id="box">\n   石小明\n</div>\n')])])]),a("p",[t._v("css 部分")]),t._v(" "),a("p",[t._v("公共部分")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("body {\n    width: 100vw;\n    height: 100vh;\n    overflow: hidden;\n}\n.box {\n    box-sizing: border-box;\n    width: 100px;\n    height: 50px;\n    line-height: 50px;\n    text-align: center;\n    font-size: 16px;\n    border: 1px solid lightblue;\n    background: lightcyan;\n}\n")])])]),a("p",[t._v("第一种："),a("code",[t._v("定位")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(".box {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    margin-left: -50px;\n    margin-top: -25px;\n}\n")])])]),a("p",[a("strong",[t._v("注意")]),t._v("：上面的方式是一定要知道具体的宽高。但下面的方式是知道宽高，但是没有用到宽高。")]),t._v(" "),a("p",[t._v("第二种："),a("code",[t._v("flex")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("body {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n")])])]),a("p",[a("strong",[t._v("注意")]),t._v("：这种方式也是兼容性不是很好")]),t._v(" "),a("p",[t._v("第三种："),a("code",[t._v("JavaScript")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("let html = document.documentElement,\n            winW = html.clientWidth,\n            winH = html.clientHeight,\n            boxW = box.offsetWidth, // offsetWidth带边框\n            boxH = box.offsetHeight;\n\n            box.style.position = 'absolute';\n            box.style.left = (winW - boxW) / 2 + 'px';\n            box.style.top = (winH - boxH) / 2 + 'px';\n")])])]),a("p",[t._v("第四种："),a("code",[t._v("table-cell")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("body {\n    display: table-cell;\n    vertical-align: middle;\n    text-align: center;\n}\n")])])])])}],!1,null,null,null);s.default=e.exports}}]);