(window.webpackJsonp=window.webpackJsonp||[]).push([[84],{285:function(e,_,a){"use strict";a.r(_);var v=a(0),c=Object(v.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var e=this,_=e.$createElement,a=e._self._c||_;return a("div",{staticClass:"content"},[a("h2",{attrs:{id:"webpack-的编译流程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#webpack-的编译流程","aria-hidden":"true"}},[e._v("#")]),e._v(" webpack 的编译流程")]),e._v(" "),a("ul",[a("li",[a("p",[e._v("webpack 了解多少？")]),e._v(" "),a("p",[e._v("Webpack 之所以能成功,在于它把复杂的实现隐藏了起来,给用户暴露出的只是一个简单的工具,让用户能快速达成目的。 同时整体架构设计合理,扩展性高,开发扩展难度不高,通过社区补足了大量缺失的功能,让 Webpack 几乎能胜任任何场景。")])]),e._v(" "),a("li",[a("p",[e._v("对 webpack 的编译原理了解吗？")])]),e._v(" "),a("li",[a("p",[e._v("写过 webpack 插件吗？")])]),e._v(" "),a("li",[a("p",[e._v("列举 webpack 编译流程中的 hook 节点")])])]),e._v(" "),a("p",[a("strong",[e._v("总结")]),e._v("：你对 webpack 的编译流程了解多少？")]),e._v(" "),a("ol",[a("li",[e._v("webpack 的 loader 和 plugin 有什么区别？")]),e._v(" "),a("li",[e._v("写过 webpack 的 loader 或则 plugin 吗？")]),e._v(" "),a("li",[e._v("webpack 的编译流程是什么？")])]),e._v(" "),a("h2",{attrs:{id:"webpack-打包原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#webpack-打包原理","aria-hidden":"true"}},[e._v("#")]),e._v(" webpack 打包原理")]),e._v(" "),a("p",[e._v("Webpack 的运行流程是一个串行的过程, 从启动到结束会依次执行以下流程:")]),e._v(" "),a("ol",[a("li",[a("code",[e._v("初始化参数")]),e._v("：从配置文件和 Shell 语句中读取与合并参数,得出最终的参数。")]),e._v(" "),a("li",[a("code",[e._v("开始编译")]),e._v("：用上一步得到的参数初始化 Compiler 对象,加载所有配置的插件,执行对象的 run 方法开始执行编译。")]),e._v(" "),a("li",[a("code",[e._v("确定入口")]),e._v("：根据配置中的 entry 找出所有的入口文件。")]),e._v(" "),a("li",[a("code",[e._v("编译模块")]),e._v("：从入口文件出发,调用所有配置的 Loader 对模块进行翻译,再找出该模块依赖的模块,再递归本步骤直到所有入口依赖的文件都经过了本步骤的处理。")]),e._v(" "),a("li",[a("code",[e._v("完成模块编译")]),e._v("：在经过第 4 步使用 Loader 翻译完所有模块后,得到了每个模块被翻译后的最终内容以及它们之间的依赖关系。")]),e._v(" "),a("li",[a("code",[e._v("输出资源")]),e._v("：根据入口和模块之间的依赖关系,组装成一个个包含多个模块的 Chunk,再把每个 Chunk 转换成一个单独的文件加入到输出列表,这步是可以修改输出内容的最后机会。")]),e._v(" "),a("li",[a("code",[e._v("输出完成")]),e._v("：在确定好输出内容后,根据配置确定输出的路径和文件名,把文件内容写入到文件系统。")])]),e._v(" "),a("p",[e._v("在以上过程中,Webpack 会在特定的时间点广播出特定的事件,插件在监听到感兴趣的事件后会执行特定的逻辑,并且插件可以调用 Webpack 提供的 API 改变 Webpack 的运行结果。")])])}],!1,null,null,null);_.default=c.exports}}]);