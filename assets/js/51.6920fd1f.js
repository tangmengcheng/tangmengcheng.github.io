(window.webpackJsonp=window.webpackJsonp||[]).push([[51],{182:function(t,e,n){"use strict";n.r(e);var s=n(0),r=Object(s.a)({},function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",{staticClass:"content"},[t._m(0),t._v(" "),t._m(1),t._v(" "),t._m(2),t._v(" "),t._m(3),t._v(" "),t._m(4),t._m(5),t._v(" "),t._m(6),t._v(" "),n("p",[t._v("对象深浅拷贝，是面试常见的面试题之一。")]),t._v(" "),n("p",[t._v("原对象：")]),t._v(" "),t._m(7),t._m(8),t._v(" "),n("p",[t._v("浅克隆 只克隆第一层")]),t._v(" "),n("p",[t._v("方法一：")]),t._v(" "),t._m(9),n("p",[t._v("方法二：")]),t._v(" "),t._m(10),t._m(11),t._v(" "),t._m(12),t._v(" "),n("p",[t._v("方法一：")]),t._v(" "),t._m(13),n("p",[t._v("方法二：")]),t._v(" "),t._m(14),t._m(15),t._v(" "),t._m(16),t._v(" "),t._m(17),t._v(" "),t._m(18),t._m(19),t._v(" "),t._m(20),t._v(" "),t._m(21),t._v(" "),n("p",[t._v("如今前端界面效果越来越复杂，有一些频繁操作会导致页面性能和用户体验度低。像：输入框搜索会频繁调端口接口、放大缩小窗口等。")]),t._v(" "),t._m(22),t._v(" "),t._m(23),t._m(24),t._v(" "),t._m(25),t._m(26),t._v(" "),t._m(27),t._m(28),t._m(29),t._v(" "),t._m(30),t._m(31),t._v(" "),t._m(32),t._v(" "),t._m(33),t._v(" "),t._m(34),t._v(" "),t._m(35),t._m(36),t._v(" "),t._m(37),t._v(" "),t._m(38),t._v(" "),t._m(39),t._m(40),t._v(" "),t._m(41),t._v(" "),t._m(42),t._v(" "),t._m(43),t._v(" "),t._m(44),t._m(45),t._v(" "),t._m(46),t._v(" "),t._m(47),t._v(" "),t._m(48),t._v(" "),t._m(49),t._m(50),t._v(" "),n("p",[t._v("一、new操作符的几个作用：")]),t._v(" "),t._m(51),t._v(" "),n("p",[t._v("二、new操作符的特点：")]),t._v(" "),t._m(52),t._v(" "),t._m(53),t._v(" "),t._m(54),t._v(" "),t._m(55),t._m(56),t._v(" "),n("p",[t._v("在面试中高级前端时。要求被手写Promise A+规范源码是必考题了。如果想详细了解，请参考 "),n("a",{attrs:{href:"https://juejin.im/post/5e2168626fb9a0300d619c9e",target:"_blank",rel:"noopener noreferrer"}},[t._v("一步步教你实现Promise/A+ 规范 完整版"),n("OutboundLink")],1)]),t._v(" "),t._m(57),t._m(58),t._v(" "),t._m(59),t._v(" "),t._m(60),t._v(" "),n("p",[t._v("let arr2 = [1, 2, 3, 2, 33, 55, 66, 3, 55];")]),t._v(" "),n("p",[t._v("第一种：")]),t._v(" "),t._m(61),n("p",[t._v("第二种：")]),t._v(" "),t._m(62),t._m(63),t._v(" "),t._m(64),t._v(" "),t._m(65),n("p",[t._v("实现方法：")]),t._v(" "),t._m(66),t._m(67),t._v(" "),t._m(68),t._m(69),t._v(" "),t._m(70),t._m(71),t._v(" "),t._m(72),t._m(73),t._v(" "),t._m(74),n("p",[t._v("第一种：")]),t._v(" "),t._m(75),n("p",[t._v("第二种：")]),t._v(" "),t._m(76),n("p",[t._v("第三种：")]),t._v(" "),t._m(77),n("p",[t._v("第四种：")]),t._v(" "),t._m(78),n("p",[t._v("第五种：")]),t._v(" "),t._m(79),t._m(80),t._v(" "),t._m(81),t._m(82),t._v(" "),t._m(83),t._m(84),t._v(" "),t._m(85),t._m(86),t._v(" "),t._m(87),t._m(88),t._v(" "),t._m(89),t._m(90),t._v(" "),t._m(91),t._m(92),t._v(" "),t._m(93),t._v(" "),t._m(94),t._m(95),t._v(" "),t._m(96),t._v(" "),t._m(97),t._m(98),t._v(" "),t._m(99),t._v(" "),t._m(100),t._m(101),t._v(" "),t._m(102),t._v(" "),t._m(103)])},[function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"js-部分"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#js-部分","aria-hidden":"true"}},[this._v("#")]),this._v(" JS 部分")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"统计网页中出现的标签"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#统计网页中出现的标签","aria-hidden":"true"}},[this._v("#")]),this._v(" 统计网页中出现的标签")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("实现步骤")]),this._v("：")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",[e("li",[this._v("获取所有的DOM节点")]),this._v(" "),e("li",[this._v("NodeList集合转化为数组")]),this._v(" "),e("li",[this._v("获取数组每个元素的标签名")]),this._v(" "),e("li",[this._v("去重")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("new Set([...document.querySelectorAll('*')].map(ele=>ele.tagName)).size\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2020/3/30/17129ddd20fc1ae1?w=440&h=440&f=jpeg&s=30661",alt:""}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"js深浅拷贝"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#js深浅拷贝","aria-hidden":"true"}},[this._v("#")]),this._v(" JS深浅拷贝")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("let obj = {\n   a: 100,\n   b: [100, 200, 300],\n   c: {\n      x: 10\n   },\n   d: /^\\d+$/\n}\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[this._v("浅克隆")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("let obj2 = {...obj};\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("let obj2 = {};\nfor(let key in obj) {\n   if(!obj.hasOwnProperty(key)) break;\n   obj2[key] = obj[key];\n}\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[this._v("深克隆")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("注意")]),this._v("：在函数、日期、正则表达式时，JSON.stringify时，都会被转换成对象{}")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("let obj3 = JSON.parse(JSON.stringify(obj));\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("function deepClone(obj) {\n    // 过滤一些特殊情况\n    if(obj === null) return null;\n    if(typeof obj !== \"object\") return obj;\n    if (typeof window !== 'undefined' && window.JSON) { // 浏览器环境下 并支持window.JSON 则使用 JSON\n        return JSON.parse(JSON.stringify(obj));\n    }\n    if(obj instanceof RegExp) { // 正则\n         return new RegExp(obj);\n    }\n    if(obj instanceof Date) { // 日期\n         return new Date(obj);\n    }\n    // let newObj = {}\n    // let newObj = new Object()\n    let newObj = new obj.constructor; // 不直接创建空对象的目的：克隆的结果和之前保持所属类  =》 即能克隆普通对象，又能克隆某个实例对象\n    for(let key in obj) {\n        if(obj.hasOwnProperty(key)) {\n             newObj[key] = deepClone(obj[key]);\n        }\n    }\n    // let newObj = obj.constructor === Array ? [] : {};\n    //for(let key in obj) {\n    //    newObj[key] = typeof obj[key] === 'object' ? deepCopy(obj[key]) : //obj[key];\n    //}\n    return newObj;\n}\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"原生ajax"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#原生ajax","aria-hidden":"true"}},[this._v("#")]),this._v(" 原生Ajax")])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[this._v("一个完整的 ajax 请求一般包括以下步骤：")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("实例化 XMLHttpRequest 对象")]),this._v(" "),e("li",[this._v("连接服务器")]),this._v(" "),e("li",[this._v("发送请求")]),this._v(" "),e("li",[this._v("介绍")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("function ajax(options) {\n  let method = options.method || 'GET', // 不传则默认为GET请求\n      params = options.params, // GET请求携带的参数\n      data   = options.data, // POST请求传递的参数\n      url    = options.url + (params ? '?' + Object.keys(params).map(key => key + '=' + params[key]).join('&') : ''),\n      async  = options.async === false ? false : true,\n      success = options.success,\n      headers = options.headers;\n\n  let xhr;\n  // 创建xhr对象\n  if(window.XMLHttpRequest) {\n    xhr = new XMLHttpRequest();\n  } else {\n    xhr = new ActiveXObject('Microsoft.XMLHTTP');\n  }\n\n  xhr.onreadystatechange = function() {\n    if(xhr.readyState === 4 && xhr.status === 200) {\n      success && success(xhr.responseText);\n    }\n  }\n\n  xhr.open(method, url, async);\n  \n  if(headers) {\n    Object.keys(Headers).forEach(key => xhr.setRequestHeader(key, headers[key]))\n  }\n\n  method === 'GET' ? xhr.send() : xhr.send(data)\n}\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("注意")]),this._v("：IE5、6不兼容XMLHttpRequest，所以要使用ActiveXObject()对象，并传入 'Microsoft.XMLHTTP'，达到兼容目的。")])},function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ul",[n("li",[n("p",[t._v("readyState的五种状态详解：")]),t._v(" "),n("p",[t._v("0 － （未初始化）还没有调用send()方法")]),t._v(" "),n("p",[t._v("1 － （载入）已调用send()方法，正在发送请求")]),t._v(" "),n("p",[t._v("2 － （载入完成）send()方法执行完成，已经接收到全部响应内容")]),t._v(" "),n("p",[t._v("3 － （交互）正在解析响应内容")]),t._v(" "),n("p",[t._v("4 － （完成）响应内容解析完成，可以在客户端调用了")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"防抖和节流"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#防抖和节流","aria-hidden":"true"}},[this._v("#")]),this._v(" 防抖和节流")])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[this._v("防抖 - debounce 当持续触发事件时，一定时间段内没有再触发事件，事件处理函数才会执行一次，如果设定的时间到来之前，又一次触发了事件，就重新开始延时。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("const debounce = (fn, delay) => {\n  let timer = null;\n  return (...args) => {\n    clearTimeout(timer);\n    timer = setTimeout(() => {\n      fn.apply(this, args);\n    }, delay);\n  };\n};\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[this._v("节流 - throttle 当持续触发事件时，保证一定时间段内只调用一次事件处理函数。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("const throttle = (fn, delay = 500) => {\n  let flag = true;\n  return (...args) => {\n    if (!flag) return;\n    flag = false;\n    setTimeout(() => {\n      fn.apply(this, args);\n      flag = true;\n    }, delay);\n  };\n};\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"解析-url-参数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#解析-url-参数","aria-hidden":"true"}},[this._v("#")]),this._v(" 解析 URL 参数")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("function parseParam(url) {\n    // 将浏览器地址中 ‘?’ 后面的字符串取出来\n    const paramsStr = /.+\\?(.+)$/.exec(url)[1];\n    // 将截取的字符串以 ‘&’ 分割后存到数组中\n    const paramsArr = paramsStr.split('&');\n    // 定义存放解析后的对象\n    let paramsObj = {};\n    // 遍历\n    paramsArr.forEach(param => {\n      // 判断是否含有key和value\n      if (/=/.test(param)) {\n        // 结构获取对象的key和value\n        let [key, val] = param.split('=');\n        // 解码\n        val = decodeURIComponent(val);\n        // 判断是否转为数字\n        val = /^\\d+$/.test(val) ? parseFloat(val) : val;\n        // 判断存放对象中是否存在key属性\n        if (paramsObj.hasOwnProperty(key)) {\n          // 存在的话就存放一个数组\n          paramsObj[key] = [].concat(paramsObj[key], val);\n        } else {\n          // 不存在就存放一个对象\n          paramsObj[key] = val;\n        }\n      } else {\n        // 没有value的情况\n        paramsObj[param] = true;\n      }\n    })\n    return paramsObj;\n}\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("let url = 'https://www.baidu.com?username=%22tmc%22&password=%22123456%22&dutiy=%E5%89%8D%E7%AB%AF%E6%94%BB%E5%9F%8E%E7%8B%AE&flag';\nconsole.log(parseParam(url))\n\n{ username: '\"tmc\"',\n  password: '\"123456\"',\n  dutiy: '前端攻城狮',\n  flag: true \n}\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"jsonp的原理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#jsonp的原理","aria-hidden":"true"}},[this._v("#")]),this._v(" Jsonp的原理")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("function jsonp({url, params, cb}) { \n   return new Promise((resolve, reject) => {\n     window[cb] = function (data) {  // 声明全局变量\n        resolve(data)\n        document.body.removeChild(script)\n      }\n      params = {...params, cb}\n      let arrs = []\n      for(let key in params) {\n         arrs.push(`${key}=${params[key]}`)\n      }\n      let script = document.createElement('script')\n      script.src = `${url}?${arrs.join('&')}`\n      document.body.appendChild(script)\n   })\n}\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("jsonp的缺点")]),this._v("：")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",[e("li",[this._v("只能发送Get请求  不支持post put delete")]),this._v(" "),e("li",[this._v("不安全 xss攻击")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"apply的原理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#apply的原理","aria-hidden":"true"}},[this._v("#")]),this._v(" apply的原理")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("apply")]),this._v(" 的实现原理和 "),e("strong",[this._v("call")]),this._v(" 的实现原理差不多，只是参数形式不一样。--- 数组")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("Function.prototype.apply = function(content = window) {\n    content.fn = this;\n    let result;\n    // 判断是否有第二个参数\n    if(arguments[1]) {\n        result = content.fn(...arguments[1]);\n    } else {\n        result = content.fn();\n    }\n    delete content.fn;\n    return result;\n}\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("注意")]),this._v("：当apply传入的第一个参数为null时，函数体内的this会指向window。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"bind的原理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#bind的原理","aria-hidden":"true"}},[this._v("#")]),this._v(" bind的原理")])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[this._v("bind 方法会创建一个新函数。当这个新函数被调用时，bind() 的第一个参数将作为它运行时的 this，之后的一序列参数将会在传递的实参前传入作为它的参数。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("Function.prototype.bind = function(content) {\n   if(typeof this != 'function') {\n      throw Error('not a function');\n   }\n   let _this = this;\n   let args = [...arguments].slice(1);\n   return function F() {\n      // 判断是否被当做构造函数使用\n      if(this instanceof F) {\n         return _this.apply(this, args.concat([...arguments]))\n      }\n      return _this.apply(content, args.concat([...arguments]))\n   }\n}\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"call的原理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#call的原理","aria-hidden":"true"}},[this._v("#")]),this._v(" call的原理")])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[this._v("call语法：fun.call(thisArg, arg1, arg2, arg3, .....)")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("call")]),this._v(" 的核心原理：")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("将函数设为对象的属性")]),this._v(" "),e("li",[this._v("执行和删除这个函数")]),this._v(" "),e("li",[this._v("指定this到函数并传入给定参数执行函数")]),this._v(" "),e("li",[this._v("如果不传参数，默认指向window")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("Function.prototype.call2 = function(content = window) {\n    // 判断是否是underfine和null\n    // if(typeof content === 'undefined' || typeof content === null){\n    //     content = window\n    // }\n    content.fn = this;\n    let args = [...arguments].slice(1);\n    let result = content.fn(...args);\n    delete content.fn;\n    return result;\n}\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("注意")]),this._v("：当call传入的第一个参数为null时，函数体内的this会指向window。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"new的原理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#new的原理","aria-hidden":"true"}},[this._v("#")]),this._v(" new的原理")])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[this._v("实现一个new操作符的具体实现步骤：")])])},function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ul",[n("li",[t._v("首先函数接受不定量的参数，第一个参数为构造函数，接下来的参数被构造函数使用")]),t._v(" "),n("li",[t._v("然后内部创建一个空对象 obj")]),t._v(" "),n("li",[t._v("因为 obj 对象需要访问到构造函数原型链上的属性，所以我们通过 setPrototypeOf 将两者联系起来。这段代码等同于 obj."),n("strong",[t._v("proto")]),t._v(" = Con.prototype")]),t._v(" "),n("li",[t._v("将 obj 绑定到构造函数上，并且传入剩余的参数")]),t._v(" "),n("li",[t._v("判断构造函数返回值是否为对象，如果为对象就使用构造函数返回的值，否则使用 obj，这样就实现了忽略构造函数返回的原始值")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("/**\n * 创建一个new操作符\n * @param {*} Con 构造函数\n * @param  {...any} args 忘构造函数中传的参数\n */\n  function createNew(Con, ...args) {\n    let obj = {} // 创建一个对象，因为new操作符会返回一个对象\n    Object.setPrototypeOf(obj, Con.prototype) // 将对象与构造函数原型链接起来\n    // obj.__proto__ = Con.prototype // 等价于上面的写法\n    let result = Con.apply(obj, args) // 将构造函数中的this指向这个对象，并传递参数\n    return result instanceof Object ? result : obj\n}\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("注意")]),this._v("：")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",[e("li",[this._v("new操作符返回一个对象，所以我们需要在内部创建一个对象")]),this._v(" "),e("li",[this._v("这个对象，也就是构造函数中的this，可以访问到挂载在this上的任意属性")]),this._v(" "),e("li",[this._v("这个对象可以访问到构造函数原型链上的属性，所以需要将对象与构造函数链接起来")]),this._v(" "),e("li",[this._v("返回原始值需要忽略，返回对象需要正常处理")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",[e("li",[this._v("new通过构造函数Test创建处理的实例可以访问构造函数中的属性也可以访问构造函数原型链上的属性，所以：通过new操作符，实例与构造函数通过原型链连接了起来")]),this._v(" "),e("li",[this._v("构造函数如果返回原始值，那么这个返回值毫无意义")]),this._v(" "),e("li",[this._v("构造函数如果返回对象，那么这个返回值会被正常的使用，导致new操作符没有作用")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"instanceof的原理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#instanceof的原理","aria-hidden":"true"}},[this._v("#")]),this._v(" instanceof的原理")])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[this._v("instanceof 用来检测一个对象在其原型链中是否存在一个构造函数的 prototype 属性")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("function instanceOf(left,right) {\n    let proto = left.__proto__;\n    let prototype = right.prototype\n    while(true) {\n        if(proto === null) return false\n        if(proto === prototype) return true\n        proto = proto.__proto__;\n    }\n}\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"promise-a-规范原理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#promise-a-规范原理","aria-hidden":"true"}},[this._v("#")]),this._v(" Promise A+规范原理")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("class Promise {\n    constructor(executor) {\n        this.status = 'pending' // 初始化状态\n        this.value = undefined // 初始化成功返回的值\n        this.reason = undefined // 初始化失败返回的原因\n\n        // 解决处理异步的resolve\n        this.onResolvedCallbacks = [] // 存放所有成功的resolve\n        this.onRejectedCallbacks = [] // 存放所有失败的reject\n\n        /**\n         * @param {*} value 成功返回值\n         * 定义resolve方法\n         * 注意：状态只能从pending->fulfilled和pending->rejected两个\n         */\n        const resolve = (value) => { \n            if(this.status === 'pending') {\n                this.status = 'fulfilled' // 成功时将状态转换为成功态fulfilled\n                this.value = value // 将成功返回的值赋值给promise\n                // 为了解决异步resolve以及返回多层promise\n                this.onResolvedCallbacks.forEach(fn => {\n                    fn() // 当状态变为成功态依次执行所有的resolve函数\n                })\n            }\n        }\n        const reject = (reason) => {\n            if(this.status === 'pending') {\n                this.status = 'rejected' // 失败时将状态转换为成功态失败态rejected\n                this.reason = reason // 将失败返回的原因赋值给promise\n                this.onRejectedCallbacks.forEach(fn => {\n                    fn() // 当状态变为失败态依次执行所有的reject函数\n                })\n            }\n        }\n        executor(resolve, reject) // 执行promise传的回调函数\n    }\n    /**\n     * 定义promise的then方法 \n     * @param {*} onFulfilled 成功的回调\n     * @param {*} onRejected 失败的回调\n     */\n    then(onFulfilled, onRejected) {\n        // 为了解决then方法返回Promise的情况\n        const promise2 = new Promise((resolve, reject) => {\n            if(this.status === 'fulfilled') { // 如果状态为fulfilled时则将值传给这个成功的回调\n                setTimeout(() => {\n                    const x = onFulfilled(this.value) // x的值有可能为 promise || 123 || '123'...\n                    // 注意：此时调用promise2时还没有返回值，要用setTimeout模拟进入第二次事件循环；先有鸡先有蛋\n                    resolvePromise(promise2, x, resolve, reject) \n                }, 0)\n            }\n            if(this.status === 'rejected') {\n                setTimeout(() => {\n                    const x = onRejected(this.reason) // 如果状态为rejected时则将视频的原因传给失败的回调\n                    resolvePromise(promise2, x, resolve, reject) \n                }, 0)\n            }\n            if(this.status === 'pending') { // 记录-》解决异步\n                this.onResolvedCallbacks.push(() => {\n                    setTimeout(() => {\n                        const x = onFulfilled(this.value)\n                        resolvePromise(promise2, x, resolve, reject) \n                    }, 0)\n                })\n                this.onRejectedCallbacks.push(() => {\n                    setTimeout(() => {\n                        const x = onRejected(this.reason)\n                        resolvePromise(promise2, x, resolve, reject) \n                    }, 0)\n                })\n            }\n        })\n        return promise2; // 解决多次链式调用的问题\n    }\n}\n\nconst resolvePromise = (promise2, x, resolve, reject) => {\n    // console.log(promise2, x, resolve, reject)\n    if(promise2 === x) { // 如果返回的值与then方法返回的值相同时\n        throw TypeError('循环引用')\n    }\n    // 判断x是不是promise;注意：null的typeof也是object要排除\n    if(typeof x === 'function' || (typeof x === 'object' && x !== null)) {\n        try {\n            const then = x.then // 获取返回值x上的then方法；注意方法会报错要捕获异常；原因111\n            if(typeof then === 'function') { // 就认为是promise\n                then.call(x, y => {\n                    // resolve(y)\n                    // 递归解析 ; 有可能返回多个嵌套的promise\n                    resolvePromise(promise2, y, resolve, reject)\n                }, r => {\n                    reject(r)\n                })\n            }\n        } catch(e) {\n            reject(e)\n        }\n    } else {\n        resolve(x);\n    }\n}\nmodule.exports = Promise;\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"js数组"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#js数组","aria-hidden":"true"}},[this._v("#")]),this._v(" JS数组")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h4",{attrs:{id:"去重"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#去重","aria-hidden":"true"}},[this._v("#")]),this._v(" 去重")])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[this._v("普通项")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("let newArr = [];\n   arr2.forEach(item => {\n       if(newArr.indexOf(item) == '-1') {\n           newArr.push(item);\n       }\n   })\nconsole.log(newArr);\n\n// (6) [1, 2, 3, 33, 55, 66]\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("let newArr = [...new Set(arr2)];\nconsole.log(newArr);\n\n// (6) [1, 2, 3, 33, 55, 66]\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("注意")]),this._v("：Array.from()、filter()、for()等方法都可以完成上面数组去重。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[this._v("对象项")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("let arr1 = [\n    {id: 1, name: '汤小梦'},\n    {id: 2, name: '石小明'},\n    {id: 3, name: '前端开发'},\n    {id: 1, name: 'web前端'}\n];\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v('const unique = (arr, key) => {\n    return [...new Map(arr.map(item => [item[key], item])).values()]\n}\nconsole.log(unique(arr1, \'id\'));\n\n// [\n\t{id: 1, name: "web前端"},\n\t{id: 2, name: "石小明"},\n\t{id: 3, name: "前端开发"}\n]\n')])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h4",{attrs:{id:"合并"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#合并","aria-hidden":"true"}},[this._v("#")]),this._v(" 合并")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("let arr3 = ['a', 'b']\nlet arr4 = ['c', 'd']\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("方法一："),e("strong",[this._v("ES5")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("let arr5 = arr3.concat(arr4);\nconsole.log(arr5);\n\n// ['a', 'b', 'c', 'd']\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("方法一："),e("strong",[this._v("ES6")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("let arr6 = [...arr3, ...arr4];\nconsole.log(arr6);\n\n// ['a', 'b', 'c', 'd']\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h4",{attrs:{id:"展平"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#展平","aria-hidden":"true"}},[this._v("#")]),this._v(" 展平")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("let arr7 = [1, 2, [3, 4], [5, 6, [7, 8, 9]]];\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("let arrNew = arr7.flat(Infinity);\nconsole.log(arrNew);\n\n// (9) [1, 2, 3, 4, 5, 6, 7, 8, 9]\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("let arrNew = arr7.join().split(',').map(Number);\nconsole.log(arrNew);\n\n// (9) [1, 2, 3, 4, 5, 6, 7, 8, 9]\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("let arrNew = arr7.toString().split(',').map(Number);\nconsole.log(arrNew);\n\n// (9) [1, 2, 3, 4, 5, 6, 7, 8, 9]\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("const flattern = (arr) => {\n     const result = []\n     arr.forEach((item) => {\n         if (Array.isArray(item)) {\n              result.push(...flattern(item))\n         } else {\n              result.push(item)\n         }\n    })\n    return result\n}\nflattern(arr7);\n\n// (9) [1, 2, 3, 4, 5, 6, 7, 8, 9]\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("function flatten(arr) {\n    return [].concat(\n        ...arr.map(x => Array.isArray(x) ? flatten(x) : x)\n    )\n}\nflattern(arr7);\n\n// (9) [1, 2, 3, 4, 5, 6, 7, 8, 9]\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h4",{attrs:{id:"是否为数组"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#是否为数组","aria-hidden":"true"}},[this._v("#")]),this._v(" 是否为数组")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("let arr = []\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("第一种："),e("code",[this._v("instanceof")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("console.log(arr instanceof Array)\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("第二种："),e("code",[this._v("constructor")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("console.log(arr.constructor === Array)\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("第三种："),e("code",[this._v("判断对象是否有 push 等数组的一些方法")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("console.log(!!arr.push && !!arr.concat)\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("第四种："),e("code",[this._v("toString")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("console.log(Object.prototype.toString.call(arr) === '[object Array]')\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("第五种："),e("code",[this._v("Array.isArray")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("console.log(Array.isArray(arr))\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("注意")]),this._v("：第五种方式最优~")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h4",{attrs:{id:"冒泡排序"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#冒泡排序","aria-hidden":"true"}},[this._v("#")]),this._v(" 冒泡排序")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("let arr = [1, 44, 6, 77, 3, 7, 99, 12];\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("冒泡排序算法的原理如下：")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",[e("li",[this._v("比较两个相邻的元素，若前一个比后一个大，则交换位置")]),this._v(" "),e("li",[this._v("第一轮的时候最后一个元素应该是最大的一个")]),this._v(" "),e("li",[this._v("对所有的元素重复以上的步骤，除了最后一个")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("function bubbleSort(arr) {\n    for(let i=0; i<arr.length; i++) {\n        for(let j=0; j<arr.length - i - 1; j++) {\n            if(arr[j+1] < arr[j]) {\n                let temp = arr[j];\n                arr[j] = arr[j+1];\n                arr[j+1] = temp;\n            }\n        }\n    }\n    return arr;\n}\nconsole.log(bubbleSort(arr));\n\n// [ 1, 3, 6, 7, 12, 44, 77, 99 ]\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("注意")]),this._v("：最后一个元素不用比较。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h4",{attrs:{id:"快速排序"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#快速排序","aria-hidden":"true"}},[this._v("#")]),this._v(" 快速排序")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("let arr = [1, 44, 6, 77, 3, 7, 99, 12];\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("快速排序算法的原理如下：")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",[e("li",[this._v("找基准（一般是以中间项为基准）")]),this._v(" "),e("li",[this._v("遍历数组，小于基准的放在left，大于基准的放在right")]),this._v(" "),e("li",[this._v("递归")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("function quickSort(arr) {\n    if(arr.length <= 1) return arr;\n    let mid = Math.floor(arr.length / 2);\n    let midItem = arr.splice(mid, 1)[0];\n    let leftArr = [];\n    let rightArr = [];\n    for(let i=0; i<arr.length; i++) {\n        let current = arr[i];\n        if(current >= midItem) {\n            rightArr.push(current);\n        } else {\n            leftArr.push(current);\n        }\n    }\n    return quickSort(leftArr).concat([midItem], quickSort(rightArr));\n}\n\nconsole.log(quickSort(arr));\n\n// [ 1, 3, 6, 7, 12, 44, 77, 99 ]\n")])])])}],!1,null,null,null);e.default=r.exports}}]);