(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{235:function(t,a,s){"use strict";s.r(a);var e=s(0),n=Object(e.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"content"},[s("h1",{attrs:{id:"git-相关操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-相关操作","aria-hidden":"true"}},[t._v("#")]),t._v(" Git 相关操作")]),t._v(" "),s("h2",{attrs:{id:"使用-git-上传本地项目到-github"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用-git-上传本地项目到-github","aria-hidden":"true"}},[t._v("#")]),t._v(" 使用 Git 上传本地项目到 github?")]),t._v(" "),s("ul",[s("li",[t._v("第一步：初始化 git")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("git init\n")])])]),s("ul",[s("li",[t._v("第二步：查看文件状态")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("git status\n")])])]),s("ul",[s("li",[t._v("第三步：添加所有文件")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("git add "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n")])])]),s("ul",[s("li",[t._v("第四步：提交文件到本地仓库")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("git commit "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("am "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'first commit init product'")]),t._v("\n")])])]),s("ul",[s("li",[t._v("第五步：添加远程仓库地址")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("git remote add origin git仓库地址\n")])])]),s("ul",[s("li",[t._v("第六步：将本地项目推送到远程仓库")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("git push "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("u origin master\n")])])]),s("h2",{attrs:{id:"git-相关命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-相关命令","aria-hidden":"true"}},[t._v("#")]),t._v(" git 相关命令")]),t._v(" "),s("ul",[s("li",[t._v("分支")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("查看本地分支：git branch\n查看远程分支：git branch "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("r\n新增分支：git checkout "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("b 分支名\n删除分支：git branch "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("D")]),t._v(" 分支名\n推送本地分支到远程：git push origin "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HEAD")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("u\n")])])]),s("ul",[s("li",[t._v("命令")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("git merge origin master    拉取远程仓库最新代码\ngit add "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("    追踪文件的变化\ngit commit "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("am "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"备注信息"')]),t._v("    将代码提交到本地仓库\ngit push   本地仓库代码推送到远程仓库\n提交pull request   管理员审核\ngit diff   查看每个文件的变化\ngit difftool   查看每个文件的变化以另外一种方式\n\ngit tag tag"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("initial  创建一个标记用于以后查看\ngit tag "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("d tag名   删除tag\ngit push origin tag"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("initial  将创建的标记提交到远程\n\ngit push "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("u "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("f origin master 强制推送\n")])])]),s("h2",{attrs:{id:"git-commit-规范"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-commit-规范","aria-hidden":"true"}},[t._v("#")]),t._v(" git commit 规范")]),t._v(" "),s("p",[t._v("市面上比较流行的方案是约定式提交规范（Conventional Commits），它受到了Angular提交准则的启发，并在很大程度上以其为依据。约定式提交规范是一种基于提交消息的轻量级约定。 它提供了一组用于创建清晰的提交历史的简单规则；这使得编写基于规范的自动化工具变得更容易。它的 message 格式如下:")]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("("),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("scope")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("): "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("subject")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("BLANK")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("LINE")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("body")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("BLANK")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("LINE")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("footer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("类型")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("[可选的作用域]: "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("描述")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n[可选的正文]\n\n[可选的脚注]\n")])])]),s("p",[t._v("其中，Header 是必需的，Body 和 Footer 可以省略。")]),t._v(" "),s("h3",{attrs:{id:"介绍"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#介绍","aria-hidden":"true"}},[t._v("#")]),t._v(" 介绍")]),t._v(" "),s("p",[t._v("commitizen 是一个撰写合格commit message的工具, 用于代替git commit 指令; cz-conventional-changelog 适配器提供 conventional-changelog标准（约定式提交标准）")]),t._v(" "),s("ul",[s("li",[t._v("全局安装")])]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('npm install -g commitizen cz-conventional-changelog\necho \'{ "path": "cz-conventional-changelog" }\' > ~/.czrc\n')])])]),s("p",[t._v("安装完毕后，可直接使用git cz来取代git commit")]),t._v(" "),s("ul",[s("li",[t._v("项目内安装")])]),t._v(" "),s("p",[t._v("commitlint 负责用于对commit message进行格式校验, husky 负责提供更易用的git hook")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("yarn add husky @commitlint/config-conventional @commitlint/cli -D\n")])])]),s("p",[s("strong",[t._v("注意")]),t._v("：commitlint 只能做格式规范, 无法触及内容. 对于内容质量的把控只能靠我们自己.")]),t._v(" "),s("h3",{attrs:{id:"配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置","aria-hidden":"true"}},[t._v("#")]),t._v(" 配置")]),t._v(" "),s("p",[t._v("项目根目录创建 commitlint.config.js")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("echo "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'module.exports = {extends: [\"@commitlint/config-conventional\"]};'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("commitlint"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("config"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("js\n")])])]),s("p",[s("strong",[t._v("注意")]),t._v("：使用 UTF-8 格式, 不然 husky 会报错")]),t._v(" "),s("p",[t._v("package.json 文件中引入 husky")]),t._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"husky"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"hooks"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"commit-msg"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"commitlint -e $GIT_PARAMS"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用","aria-hidden":"true"}},[t._v("#")]),t._v(" 使用")]),t._v(" "),s("p",[t._v("执行 git add . 之后, 执行 git cz 进入 interactive 模式，根据提示依次填写")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('? Select the type of change that you\'re committing:  ? 选择要提交的更改类型：\n\n? What is the scope of this change (e.g. component or file name): (press enter to skip)  ? 此更改的范围是什么（例如组件或文件名）：（按enter键跳过）\n\n? Write a short, imperative tense description of the change (max 55 chars):  ? 写一个简短的命令式时态描述（最多55个字符）：\n\n? Provide a longer description of the change: (press enter to skip)  ? 提供更改的详细说明：（按enter键跳过）\n\n? Are there any breaking changes?  ? 有什么突破性的变化吗？\n\n? Describe the breaking changes:  ? 描述突破性的变化：\n\n? Does this change affect any open issues?  ? 这一变化是否影响到任何未决问题？\n\n? Add issue references (e.g. "fix #123", "re #123".):  ? 添加问题参考（例如“fix#123”、“re#123”）：\n')])])]),s("p",[t._v("最后执行 git push -u origin branchName")]),t._v(" "),s("h3",{attrs:{id:"选项说明"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#选项说明","aria-hidden":"true"}},[t._v("#")]),t._v(" 选项说明")]),t._v(" "),s("ol",[s("li",[t._v("type (必填)")])]),t._v(" "),s("p",[t._v("type为必填项，用于指定commit的类型，约定了feat、fix两个主要type，以及docs、style、build、refactor、revert五个特殊type，其余type暂不使用。")]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[t._v("# 主要type\nfeat:     增加新功能\nfix:      修复bug\n\n# 特殊type\ndocs:     只改动了文档相关的内容\nstyle:    不影响代码含义的改动，例如去掉空格、改变缩进、增删分号\nbuild:    构造工具的或者外部依赖的改动，例如webpack，npm\nrefactor: 代码重构时使用\nrevert:   执行git revert打印的message\n\n# 暂不使用type\ntest:     添加测试或者修改现有测试\nperf:     提高性能的改动\nci:       与CI（持续集成服务）有关的改动\nchore:    不修改src或者test的其余修改，例如构建过程或辅助工具的变动\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[t._v("scope (选填)")])]),t._v(" "),s("p",[t._v("scope也为必填项，用于描述改动的范围，格式为项目名/模块名，例如：package.json ...")]),t._v(" "),s("ol",{attrs:{start:"3"}},[s("li",[t._v("subject（必填）")])]),t._v(" "),s("p",[t._v("subject是 commit 目的的简短描述，不超过 55 个字符")]),t._v(" "),s("h3",{attrs:{id:"生成-change-log"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#生成-change-log","aria-hidden":"true"}},[t._v("#")]),t._v(" 生成 Change log")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("$ npm install -g conventional-changelog\n$ cd my-project\n$ conventional-changelog -p angular -i CHANGELOG.md -w\n")])])]),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"scripts"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"changelog"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"conventional-changelog -p angular -i CHANGELOG.md -w -r 0"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("conventional-changelog-cli：从git metadata生成变更日志")]),t._v(" "),s("ul",[s("li",[t._v("安装")])]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("yarn add conventional-changelog-cli -S\n")])])]),s("ul",[s("li",[t._v("在项目根目录下新建CHANGELOG.md")])]),t._v(" "),s("p",[t._v("package.json 添加指令")]),t._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"changelog"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"conventional-changelog -p angular -i CHANGELOG.md -s"')]),t._v("\n")])])]),s("p",[s("strong",[t._v("注意")]),t._v("：如果这是您第一次使用此工具，并且想要生成所有以前的变更日志，则可以执行：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("conventional"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("changelog "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("p angular "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("i "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CHANGELOG")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("md "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("s "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("r "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n")])])])])}],!1,null,null,null);a.default=n.exports}}]);